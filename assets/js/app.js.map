{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"jQuery\"","webpack:///../js-dev/cssVars.js","webpack:///../js-dev/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","jQuery","balanced","a","b","str","RegExp","maybeMatch","range","start","end","pre","slice","body","length","post","reg","match","begs","beg","left","right","result","ai","indexOf","bi","push","pop","window","CSS","supports","$","external_jQuery_default","addClass"],"mappings":"aACA,IAAAA,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,IACAG,EAAAH,EACAI,GAAA,EACAH,YAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,aAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,+FAIAlC,IAAAmC,EAAA,mBClFAhC,EAAAD,QAAAkC,2FCmTA,SAASC,EAASC,EAAGC,EAAGC,GAChBF,aAAaG,SAAQH,EAAII,EAAWJ,EAAGE,IACvCD,aAAaE,SAAQF,EAAIG,EAAWH,EAAGC,IAC3C,IAAItB,EAAIyB,EAAML,EAAGC,EAAGC,GACpB,OAAOtB,IACH0B,MAAO1B,EAAE,GACT2B,IAAK3B,EAAE,GACP4B,IAAKN,EAAIO,MAAM,EAAG7B,EAAE,IACpB8B,KAAMR,EAAIO,MAAM7B,EAAE,GAAKoB,EAAEW,OAAQ/B,EAAE,IACnCgC,KAAMV,EAAIO,MAAM7B,EAAE,GAAKqB,EAAEU,SAIjC,SAASP,EAAWS,EAAKX,GACrB,IAAIhC,EAAIgC,EAAIY,MAAMD,GAClB,OAAO3C,EAAIA,EAAE,GAAK,KAKtB,SAASmC,EAAML,EAAGC,EAAGC,GACjB,IAAIa,EAAMC,EAAKC,EAAMC,EAAOC,EACxBC,EAAKlB,EAAImB,QAAQrB,GACjBsB,EAAKpB,EAAImB,QAAQpB,EAAGmB,EAAK,GACzBtD,EAAIsD,EACR,GAAIA,GAAM,GAAKE,EAAK,EAAG,CAGnB,IAFAP,KACAE,EAAOf,EAAIS,OACJ7C,GAAK,IAAMqD,GACVrD,GAAKsD,GACLL,EAAKQ,KAAKzD,GACVsD,EAAKlB,EAAImB,QAAQrB,EAAGlC,EAAI,IACF,GAAfiD,EAAKJ,OACZQ,GAAWJ,EAAKS,MAAOF,KAEvBN,EAAMD,EAAKS,OACDP,IACNA,EAAOD,EACPE,EAAQI,GAEZA,EAAKpB,EAAImB,QAAQpB,EAAGnC,EAAI,IAE5BA,EAAIsD,EAAKE,GAAMF,GAAM,EAAIA,EAAKE,EAE9BP,EAAKJ,SACLQ,GAAWF,EAAMC,IAGzB,OAAOC,EA9BXpB,EAASM,MAAQA,EA6lBMoB,QAAUA,OAAOC,KAAOD,OAAOC,IAAIC,UAAYF,OAAOC,IAAIC,SAAS,aCt5BtFC,EAEDC,EAAA7B,GAFG,4CAA4C8B,SAAS","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"C:\\\\xampp\\\\htdocs\\\\domains\\\\crdm-spolky-rozsirena\\\\wp-content\\\\themes\\\\crdm_advanced\\\\assets\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","module.exports = jQuery;","/*!\r\n * css-vars-ponyfill\r\n * v1.8.0\r\n * https://github.com/jhildenbiddle/css-vars-ponyfill\r\n * (c) 2018 John Hildenbiddle <http://hildenbiddle.com>\r\n * MIT license\r\n */\r\n/*!\r\n * get-css-data\r\n * v1.3.2\r\n * https://github.com/jhildenbiddle/get-css-data\r\n * (c) 2018 John Hildenbiddle <http://hildenbiddle.com>\r\n * MIT license\r\n */\r\nfunction getUrls(urls) {\r\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n    var settings = {\r\n        mimeType: options.mimeType || null,\r\n        onBeforeSend: options.onBeforeSend || Function.prototype,\r\n        onSuccess: options.onSuccess || Function.prototype,\r\n        onError: options.onError || Function.prototype,\r\n        onComplete: options.onComplete || Function.prototype\r\n    };\r\n    var urlArray = Array.isArray(urls) ? urls : [ urls ];\r\n    var urlQueue = Array.apply(null, Array(urlArray.length)).map(function(x) {\r\n        return null;\r\n    });\r\n    function onError(xhr, urlIndex) {\r\n        settings.onError(xhr, urlArray[urlIndex], urlIndex);\r\n    }\r\n    function onSuccess(responseText, urlIndex) {\r\n        var returnVal = settings.onSuccess(responseText, urlArray[urlIndex], urlIndex);\r\n        responseText = returnVal === false ? \"\" : returnVal || responseText;\r\n        urlQueue[urlIndex] = responseText;\r\n        if (urlQueue.indexOf(null) === -1) {\r\n            settings.onComplete(urlQueue);\r\n        }\r\n    }\r\n    urlArray.forEach(function(url, i) {\r\n        var parser = document.createElement(\"a\");\r\n        parser.setAttribute(\"href\", url);\r\n        parser.href = parser.href;\r\n        var isCrossDomain = parser.host !== location.host;\r\n        var isSameProtocol = parser.protocol === location.protocol;\r\n        if (isCrossDomain && typeof XDomainRequest !== \"undefined\") {\r\n            if (isSameProtocol) {\r\n                var xdr = new XDomainRequest();\r\n                xdr.open(\"GET\", url);\r\n                xdr.timeout = 0;\r\n                xdr.onprogress = Function.prototype;\r\n                xdr.ontimeout = Function.prototype;\r\n                xdr.onload = function() {\r\n                    onSuccess(xdr.responseText, i);\r\n                };\r\n                xdr.onerror = function(err) {\r\n                    onError(xdr, i);\r\n                };\r\n                setTimeout(function() {\r\n                    xdr.send();\r\n                }, 0);\r\n            } else {\r\n                console.log(\"Internet Explorer 9 Cross-Origin (CORS) requests must use the same protocol\");\r\n                onError(null, i);\r\n            }\r\n        } else {\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.open(\"GET\", url);\r\n            if (settings.mimeType && xhr.overrideMimeType) {\r\n                xhr.overrideMimeType(settings.mimeType);\r\n            }\r\n            settings.onBeforeSend(xhr, url, i);\r\n            xhr.onreadystatechange = function() {\r\n                if (xhr.readyState === 4) {\r\n                    if (xhr.status === 200) {\r\n                        onSuccess(xhr.responseText, i);\r\n                    } else {\r\n                        onError(xhr, i);\r\n                    }\r\n                }\r\n            };\r\n            xhr.send();\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Gets CSS data from <style> and <link> nodes (including @imports), then\r\n * returns data in order processed by DOM. Allows specifying nodes to\r\n * include/exclude and filtering CSS data using RegEx.\r\n *\r\n * @preserve\r\n * @param {object}   [options] The options object\r\n * @param {string}   [options.include] CSS selector matching <link> and <style>\r\n *                   nodes to include\r\n * @param {string}   [options.exclude] CSS selector matching <link> and <style>\r\n *                   nodes to exclude\r\n * @param {object}   [options.filter] Regular expression used to filter node CSS\r\n *                   data. Each block of CSS data is tested against the filter,\r\n *                   and only matching data is included.\r\n * @param {function} [options.onBeforeSend] Callback before XHR is sent. Passes\r\n *                   1) the XHR object, 2) source node reference, and 3) the\r\n *                   source URL as arguments.\r\n * @param {function} [options.onSuccess] Callback on each CSS node read. Passes\r\n *                   1) CSS text, 2) source node reference, and 3) the source\r\n *                   URL as arguments.\r\n * @param {function} [options.onError] Callback on each error. Passes 1) the XHR\r\n *                   object for inspection, 2) soure node reference, and 3) the\r\n *                   source URL that failed (either a <link> href or an @import)\r\n *                   as arguments\r\n * @param {function} [options.onComplete] Callback after all nodes have been\r\n *                   processed. Passes 1) concatenated CSS text, 2) an array of\r\n *                   CSS text in DOM order, and 3) an array of nodes in DOM\r\n *                   order as arguments.\r\n *\r\n * @example\r\n *\r\n *   getCssData({\r\n *     include: 'style,link[rel=\"stylesheet\"]', // default\r\n *     exclude: '[href=\"skip.css\"]',\r\n *     filter : /red/,\r\n *     onBeforeSend(xhr, node, url) {\r\n *       // ...\r\n *     }\r\n *     onSuccess(cssText, node, url) {\r\n *       // ...\r\n *     }\r\n *     onError(xhr, node, url) {\r\n *       // ...\r\n *     },\r\n *     onComplete(cssText, cssArray) {\r\n *       // ...\r\n *     },\r\n *   });\r\n */ function getCssData(options) {\r\n    var regex = {\r\n        cssComments: /\\/\\*[\\s\\S]+?\\*\\//g,\r\n        cssImports: /(?:@import\\s*)(?:url\\(\\s*)?(?:['\"])([^'\"]*)(?:['\"])(?:\\s*\\))?(?:[^;]*;)/g\r\n    };\r\n    var settings = {\r\n        include: options.include || 'style,link[rel=\"stylesheet\"]',\r\n        exclude: options.exclude || null,\r\n        filter: options.filter || null,\r\n        onBeforeSend: options.onBeforeSend || Function.prototype,\r\n        onSuccess: options.onSuccess || Function.prototype,\r\n        onError: options.onError || Function.prototype,\r\n        onComplete: options.onComplete || Function.prototype\r\n    };\r\n    var sourceNodes = Array.apply(null, document.querySelectorAll(settings.include)).filter(function(node) {\r\n        return !matchesSelector(node, settings.exclude);\r\n    });\r\n    var cssArray = Array.apply(null, Array(sourceNodes.length)).map(function(x) {\r\n        return null;\r\n    });\r\n    function handleComplete() {\r\n        var isComplete = cssArray.indexOf(null) === -1;\r\n        if (isComplete) {\r\n            var cssText = cssArray.join(\"\");\r\n            settings.onComplete(cssText, cssArray, sourceNodes);\r\n        }\r\n    }\r\n    function handleSuccess(cssText, cssIndex, node, sourceUrl) {\r\n        var returnVal = settings.onSuccess(cssText, node, sourceUrl);\r\n        cssText = returnVal === false ? \"\" : returnVal || cssText;\r\n        resolveImports(cssText, node, sourceUrl, function(resolvedCssText, errorData) {\r\n            if (cssArray[cssIndex] === null) {\r\n                errorData.forEach(function(data) {\r\n                    return settings.onError(data.xhr, node, data.url);\r\n                });\r\n                if (!settings.filter || settings.filter.test(resolvedCssText)) {\r\n                    cssArray[cssIndex] = resolvedCssText;\r\n                } else {\r\n                    cssArray[cssIndex] = \"\";\r\n                }\r\n                handleComplete();\r\n            }\r\n        });\r\n    }\r\n    function parseImportData(cssText, baseUrl) {\r\n        var ignoreRules = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\r\n        var importData = {};\r\n        importData.rules = (cssText.replace(regex.cssComments, \"\").match(regex.cssImports) || []).filter(function(rule) {\r\n            return ignoreRules.indexOf(rule) === -1;\r\n        });\r\n        importData.urls = importData.rules.map(function(rule) {\r\n            return rule.replace(regex.cssImports, \"$1\");\r\n        });\r\n        importData.absoluteUrls = importData.urls.map(function(url) {\r\n            return getFullUrl(url, baseUrl);\r\n        });\r\n        importData.absoluteRules = importData.rules.map(function(rule, i) {\r\n            var oldUrl = importData.urls[i];\r\n            var newUrl = getFullUrl(importData.absoluteUrls[i], baseUrl);\r\n            return rule.replace(oldUrl, newUrl);\r\n        });\r\n        return importData;\r\n    }\r\n    function resolveImports(cssText, node, baseUrl, callbackFn) {\r\n        var __errorData = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\r\n        var __errorRules = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : [];\r\n        var importData = parseImportData(cssText, baseUrl, __errorRules);\r\n        if (importData.rules.length) {\r\n            getUrls(importData.absoluteUrls, {\r\n                onBeforeSend: function onBeforeSend(xhr, url, urlIndex) {\r\n                    settings.onBeforeSend(xhr, node, url);\r\n                },\r\n                onSuccess: function onSuccess(cssText, url, urlIndex) {\r\n                    var returnVal = settings.onSuccess(cssText, node, url);\r\n                    cssText = returnVal === false ? \"\" : returnVal || cssText;\r\n                    var responseImportData = parseImportData(cssText, url, __errorRules);\r\n                    responseImportData.rules.forEach(function(rule, i) {\r\n                        cssText = cssText.replace(rule, responseImportData.absoluteRules[i]);\r\n                    });\r\n                    return cssText;\r\n                },\r\n                onError: function onError(xhr, url, urlIndex) {\r\n                    __errorData.push({\r\n                        xhr: xhr,\r\n                        url: url\r\n                    });\r\n                    __errorRules.push(importData.rules[urlIndex]);\r\n                    resolveImports(cssText, node, baseUrl, callbackFn, __errorData, __errorRules);\r\n                },\r\n                onComplete: function onComplete(responseArray) {\r\n                    responseArray.forEach(function(importText, i) {\r\n                        cssText = cssText.replace(importData.rules[i], importText);\r\n                    });\r\n                    resolveImports(cssText, node, baseUrl, callbackFn, __errorData, __errorRules);\r\n                }\r\n            });\r\n        } else {\r\n            callbackFn(cssText, __errorData);\r\n        }\r\n    }\r\n    if (sourceNodes.length) {\r\n        sourceNodes.forEach(function(node, i) {\r\n            var linkHref = node.getAttribute(\"href\");\r\n            var linkRel = node.getAttribute(\"rel\");\r\n            var isLink = node.nodeName === \"LINK\" && linkHref && linkRel && linkRel.toLowerCase() === \"stylesheet\";\r\n            var isStyle = node.nodeName === \"STYLE\";\r\n            if (isLink) {\r\n                getUrls(linkHref, {\r\n                    mimeType: \"text/css\",\r\n                    onBeforeSend: function onBeforeSend(xhr, url, urlIndex) {\r\n                        settings.onBeforeSend(xhr, node, url);\r\n                    },\r\n                    onSuccess: function onSuccess(cssText, url, urlIndex) {\r\n                        var sourceUrl = getFullUrl(linkHref, location.href);\r\n                        handleSuccess(cssText, i, node, sourceUrl);\r\n                    },\r\n                    onError: function onError(xhr, url, urlIndex) {\r\n                        cssArray[i] = \"\";\r\n                        settings.onError(xhr, node, url);\r\n                        handleComplete();\r\n                    }\r\n                });\r\n            } else if (isStyle) {\r\n                handleSuccess(node.textContent, i, node, location.href);\r\n            } else {\r\n                cssArray[i] = \"\";\r\n                handleComplete();\r\n            }\r\n        });\r\n    } else {\r\n        settings.onComplete(\"\", []);\r\n    }\r\n}\r\n\r\nfunction getFullUrl(url) {\r\n    var base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : location.href;\r\n    var d = document.implementation.createHTMLDocument(\"\");\r\n    var b = d.createElement(\"base\");\r\n    var a = d.createElement(\"a\");\r\n    d.head.appendChild(b);\r\n    d.body.appendChild(a);\r\n    b.href = base;\r\n    a.href = url;\r\n    return a.href;\r\n}\r\n\r\nfunction matchesSelector(elm, selector) {\r\n    var matches = elm.matches || elm.matchesSelector || elm.webkitMatchesSelector || elm.mozMatchesSelector || elm.msMatchesSelector || elm.oMatchesSelector;\r\n    return matches.call(elm, selector);\r\n}\r\n\r\nfunction mergeDeep() {\r\n    var isObject = function isObject(obj) {\r\n        return obj instanceof Object && obj.constructor === Object;\r\n    };\r\n    for (var _len = arguments.length, objects = Array(_len), _key = 0; _key < _len; _key++) {\r\n        objects[_key] = arguments[_key];\r\n    }\r\n    return objects.reduce(function(prev, obj) {\r\n        Object.keys(obj).forEach(function(key) {\r\n            var pVal = prev[key];\r\n            var oVal = obj[key];\r\n            if (isObject(pVal) && isObject(oVal)) {\r\n                prev[key] = mergeDeep(pVal, oVal);\r\n            } else {\r\n                prev[key] = oVal;\r\n            }\r\n        });\r\n        return prev;\r\n    }, {});\r\n}\r\n\r\nvar balancedMatch = balanced;\r\n\r\nfunction balanced(a, b, str) {\r\n    if (a instanceof RegExp) a = maybeMatch(a, str);\r\n    if (b instanceof RegExp) b = maybeMatch(b, str);\r\n    var r = range(a, b, str);\r\n    return r && {\r\n        start: r[0],\r\n        end: r[1],\r\n        pre: str.slice(0, r[0]),\r\n        body: str.slice(r[0] + a.length, r[1]),\r\n        post: str.slice(r[1] + b.length)\r\n    };\r\n}\r\n\r\nfunction maybeMatch(reg, str) {\r\n    var m = str.match(reg);\r\n    return m ? m[0] : null;\r\n}\r\n\r\nbalanced.range = range;\r\n\r\nfunction range(a, b, str) {\r\n    var begs, beg, left, right, result;\r\n    var ai = str.indexOf(a);\r\n    var bi = str.indexOf(b, ai + 1);\r\n    var i = ai;\r\n    if (ai >= 0 && bi > 0) {\r\n        begs = [];\r\n        left = str.length;\r\n        while (i >= 0 && !result) {\r\n            if (i == ai) {\r\n                begs.push(i);\r\n                ai = str.indexOf(a, i + 1);\r\n            } else if (begs.length == 1) {\r\n                result = [ begs.pop(), bi ];\r\n            } else {\r\n                beg = begs.pop();\r\n                if (beg < left) {\r\n                    left = beg;\r\n                    right = bi;\r\n                }\r\n                bi = str.indexOf(b, i + 1);\r\n            }\r\n            i = ai < bi && ai >= 0 ? ai : bi;\r\n        }\r\n        if (begs.length) {\r\n            result = [ left, right ];\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction cssParse(css) {\r\n    var errors = [];\r\n    function error(msg) {\r\n        throw new Error(\"CSS parse error: \" + msg);\r\n    }\r\n    function match(re) {\r\n        var m = re.exec(css);\r\n        if (m) {\r\n            css = css.slice(m[0].length);\r\n            return m;\r\n        }\r\n    }\r\n    function whitespace() {\r\n        match(/^\\s*/);\r\n    }\r\n    function open() {\r\n        return match(/^{\\s*/);\r\n    }\r\n    function close() {\r\n        return match(/^}/);\r\n    }\r\n    function comment() {\r\n        whitespace();\r\n        if (css[0] !== \"/\" || css[1] !== \"*\") {\r\n            return;\r\n        }\r\n        var i = 2;\r\n        while (css[i] && (css[i] !== \"*\" || css[i + 1] !== \"/\")) {\r\n            i++;\r\n        }\r\n        if (!css[i]) {\r\n            return error(\"end of comment is missing\");\r\n        }\r\n        var str = css.slice(2, i);\r\n        css = css.slice(i + 2);\r\n        return {\r\n            type: \"comment\",\r\n            comment: str\r\n        };\r\n    }\r\n    function comments() {\r\n        var cmnts = [];\r\n        var c = void 0;\r\n        while (c = comment()) {\r\n            cmnts.push(c);\r\n        }\r\n        return cmnts;\r\n    }\r\n    function selector() {\r\n        whitespace();\r\n        while (css[0] === \"}\") {\r\n            error(\"extra closing bracket\");\r\n        }\r\n        var m = match(/^((\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'|[^{])+)/);\r\n        if (m) {\r\n            return m[0].trim().replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*\\/]|[\\r\\n])))*\\*\\/+/g, \"\").replace(/\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'/g, function(m) {\r\n                return m.replace(/,/g, \"‌\");\r\n            }).split(/\\s*(?![^(]*\\)),\\s*/).map(function(s) {\r\n                return s.replace(/\\u200C/g, \",\");\r\n            });\r\n        }\r\n    }\r\n    function declaration() {\r\n        match(/^([;\\s]*)+/);\r\n        var comment_regexp = /\\/\\*[^*]*\\*+([^\\/*][^*]*\\*+)*\\//g;\r\n        var prop = match(/^(\\*?[-#\\/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/);\r\n        if (!prop) {\r\n            return;\r\n        }\r\n        prop = prop[0].trim();\r\n        if (!match(/^:\\s*/)) {\r\n            return error(\"property missing ':'\");\r\n        }\r\n        var val = match(/^((?:\\/\\*.*?\\*\\/|'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\((\\s*'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|[^)]*?)\\s*\\)|[^};])+)/);\r\n        var ret = {\r\n            type: \"declaration\",\r\n            property: prop.replace(comment_regexp, \"\"),\r\n            value: val ? val[0].replace(comment_regexp, \"\").trim() : \"\"\r\n        };\r\n        match(/^[;\\s]*/);\r\n        return ret;\r\n    }\r\n    function declarations() {\r\n        if (!open()) {\r\n            return error(\"missing '{'\");\r\n        }\r\n        var d = void 0, decls = comments();\r\n        while (d = declaration()) {\r\n            decls.push(d);\r\n            decls = decls.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(\"missing '}'\");\r\n        }\r\n        return decls;\r\n    }\r\n    function keyframe() {\r\n        whitespace();\r\n        var vals = [];\r\n        var m = void 0;\r\n        while (m = match(/^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/)) {\r\n            vals.push(m[1]);\r\n            match(/^,\\s*/);\r\n        }\r\n        if (vals.length) {\r\n            return {\r\n                type: \"keyframe\",\r\n                values: vals,\r\n                declarations: declarations()\r\n            };\r\n        }\r\n    }\r\n    function at_keyframes() {\r\n        var m = match(/^@([-\\w]+)?keyframes\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        var vendor = m[1];\r\n        m = match(/^([-\\w]+)\\s*/);\r\n        if (!m) {\r\n            return error(\"@keyframes missing name\");\r\n        }\r\n        var name = m[1];\r\n        if (!open()) {\r\n            return error(\"@keyframes missing '{'\");\r\n        }\r\n        var frame = void 0, frames = comments();\r\n        while (frame = keyframe()) {\r\n            frames.push(frame);\r\n            frames = frames.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(\"@keyframes missing '}'\");\r\n        }\r\n        return {\r\n            type: \"keyframes\",\r\n            name: name,\r\n            vendor: vendor,\r\n            keyframes: frames\r\n        };\r\n    }\r\n    function at_page() {\r\n        var m = match(/^@page */);\r\n        if (m) {\r\n            var sel = selector() || [];\r\n            return {\r\n                type: \"page\",\r\n                selectors: sel,\r\n                declarations: declarations()\r\n            };\r\n        }\r\n    }\r\n    function at_fontface() {\r\n        var m = match(/^@font-face\\s*/);\r\n        if (m) {\r\n            return {\r\n                type: \"font-face\",\r\n                declarations: declarations()\r\n            };\r\n        }\r\n    }\r\n    function at_supports() {\r\n        var m = match(/^@supports *([^{]+)/);\r\n        if (m) {\r\n            return {\r\n                type: \"supports\",\r\n                supports: m[1].trim(),\r\n                rules: rules()\r\n            };\r\n        }\r\n    }\r\n    function at_host() {\r\n        var m = match(/^@host\\s*/);\r\n        if (m) {\r\n            return {\r\n                type: \"host\",\r\n                rules: rules()\r\n            };\r\n        }\r\n    }\r\n    function at_media() {\r\n        var m = match(/^@media *([^{]+)/);\r\n        if (m) {\r\n            return {\r\n                type: \"media\",\r\n                media: m[1].trim(),\r\n                rules: rules()\r\n            };\r\n        }\r\n    }\r\n    function at_custom_m() {\r\n        var m = match(/^@custom-media\\s+(--[^\\s]+)\\s*([^{;]+);/);\r\n        if (m) {\r\n            return {\r\n                type: \"custom-media\",\r\n                name: m[1].trim(),\r\n                media: m[2].trim()\r\n            };\r\n        }\r\n    }\r\n    function at_document() {\r\n        var m = match(/^@([-\\w]+)?document *([^{]+)/);\r\n        if (m) {\r\n            return {\r\n                type: \"document\",\r\n                document: m[2].trim(),\r\n                vendor: m[1] ? m[1].trim() : null,\r\n                rules: rules()\r\n            };\r\n        }\r\n    }\r\n    function at_x() {\r\n        var m = match(/^@(import|charset|namespace)\\s*([^;]+);/);\r\n        if (m) {\r\n            return {\r\n                type: m[1],\r\n                name: m[2].trim()\r\n            };\r\n        }\r\n    }\r\n    function at_rule() {\r\n        whitespace();\r\n        if (css[0] === \"@\") {\r\n            return at_keyframes() || at_supports() || at_host() || at_media() || at_custom_m() || at_page() || at_document() || at_fontface() || at_x();\r\n        }\r\n    }\r\n    function rule() {\r\n        var sel = selector() || [];\r\n        if (!sel.length) {\r\n            error(\"selector missing\");\r\n        }\r\n        var decls = declarations();\r\n        return {\r\n            type: \"rule\",\r\n            selectors: sel,\r\n            declarations: decls\r\n        };\r\n    }\r\n    function rules(core) {\r\n        if (!core && !open()) {\r\n            return error(\"missing '{'\");\r\n        }\r\n        var node = void 0, rules = comments();\r\n        while (css.length && (core || css[0] !== \"}\") && (node = at_rule() || rule())) {\r\n            rules.push(node);\r\n            rules = rules.concat(comments());\r\n        }\r\n        if (!core && !close()) {\r\n            return error(\"missing '}'\");\r\n        }\r\n        return rules;\r\n    }\r\n    return {\r\n        type: \"stylesheet\",\r\n        stylesheet: {\r\n            rules: rules(true),\r\n            errors: errors\r\n        }\r\n    };\r\n}\r\n\r\nfunction stringifyCss(tree) {\r\n    var delim = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\r\n    var cb = arguments[2];\r\n    var renderMethods = {\r\n        charset: function charset(node) {\r\n            return \"@charset \" + node.name + \";\";\r\n        },\r\n        comment: function comment(node) {\r\n            return node.comment.indexOf(\"__CSSVARSPONYFILL\") === 0 ? \"/*\" + node.comment + \"*/\" : \"\";\r\n        },\r\n        \"custom-media\": function customMedia(node) {\r\n            return \"@custom-media \" + node.name + \" \" + node.media + \";\";\r\n        },\r\n        declaration: function declaration(node) {\r\n            return node.property + \":\" + node.value + \";\";\r\n        },\r\n        document: function document(node) {\r\n            return \"@\" + (node.vendor || \"\") + \"document \" + node.document + \"{\" + visit(node.rules) + \"}\";\r\n        },\r\n        \"font-face\": function fontFace(node) {\r\n            return \"@font-face\" + \"{\" + visit(node.declarations) + \"}\";\r\n        },\r\n        host: function host(node) {\r\n            return \"@host\" + \"{\" + visit(node.rules) + \"}\";\r\n        },\r\n        import: function _import(node) {\r\n            return \"@import \" + node.name + \";\";\r\n        },\r\n        keyframe: function keyframe(node) {\r\n            return node.values.join(\",\") + \"{\" + visit(node.declarations) + \"}\";\r\n        },\r\n        keyframes: function keyframes(node) {\r\n            return \"@\" + (node.vendor || \"\") + \"keyframes \" + node.name + \"{\" + visit(node.keyframes) + \"}\";\r\n        },\r\n        media: function media(node) {\r\n            return \"@media \" + node.media + \"{\" + visit(node.rules) + \"}\";\r\n        },\r\n        namespace: function namespace(node) {\r\n            return \"@namespace \" + node.name + \";\";\r\n        },\r\n        page: function page(node) {\r\n            return \"@page \" + (node.selectors.length ? node.selectors.join(\", \") : \"\") + \"{\" + visit(node.declarations) + \"}\";\r\n        },\r\n        rule: function rule(node) {\r\n            var decls = node.declarations;\r\n            if (decls.length) {\r\n                return node.selectors.join(\",\") + \"{\" + visit(decls) + \"}\";\r\n            }\r\n        },\r\n        supports: function supports(node) {\r\n            return \"@supports \" + node.supports + \"{\" + visit(node.rules) + \"}\";\r\n        }\r\n    };\r\n    function visit(nodes) {\r\n        var buf = \"\";\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            var n = nodes[i];\r\n            if (cb) {\r\n                cb(n);\r\n            }\r\n            var txt = renderMethods[n.type](n);\r\n            if (txt) {\r\n                buf += txt;\r\n                if (txt.length && n.selectors) {\r\n                    buf += delim;\r\n                }\r\n            }\r\n        }\r\n        return buf;\r\n    }\r\n    return visit(tree.stylesheet.rules);\r\n}\r\n\r\nfunction walkCss(node, fn) {\r\n    node.rules.forEach(function(rule) {\r\n        if (rule.rules) {\r\n            walkCss(rule, fn);\r\n            return;\r\n        }\r\n        if (rule.keyframes) {\r\n            rule.keyframes.forEach(function(keyframe) {\r\n                if (keyframe.type === \"keyframe\") {\r\n                    fn(keyframe.declarations, rule);\r\n                }\r\n            });\r\n            return;\r\n        }\r\n        if (!rule.declarations) {\r\n            return;\r\n        }\r\n        fn(rule.declarations, node);\r\n    });\r\n}\r\n\r\nvar persistStore = {};\r\n\r\nvar VAR_PROP_IDENTIFIER = \"--\";\r\n\r\nvar VAR_FUNC_IDENTIFIER = \"var\";\r\n\r\nfunction transformVars(cssText) {\r\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n    var defaults = {\r\n        fixNestedCalc: true,\r\n        onlyVars: true,\r\n        persist: false,\r\n        preserve: false,\r\n        variables: {},\r\n        onWarning: function onWarning() {}\r\n    };\r\n    var map = {};\r\n    var settings = mergeDeep(defaults, options);\r\n    var varSource = settings.persist ? persistStore : settings.variables;\r\n    var cssTree = cssParse(cssText);\r\n    if (settings.onlyVars) {\r\n        cssTree.stylesheet.rules = filterVars(cssTree.stylesheet.rules);\r\n    }\r\n    cssTree.stylesheet.rules.forEach(function(rule) {\r\n        var varNameIndices = [];\r\n        if (rule.type !== \"rule\") {\r\n            return;\r\n        }\r\n        if (rule.selectors.length !== 1 || rule.selectors[0] !== \":root\") {\r\n            return;\r\n        }\r\n        rule.declarations.forEach(function(decl, i) {\r\n            var prop = decl.property;\r\n            var value = decl.value;\r\n            if (prop && prop.indexOf(VAR_PROP_IDENTIFIER) === 0) {\r\n                map[prop] = value;\r\n                varNameIndices.push(i);\r\n            }\r\n        });\r\n        if (!settings.preserve) {\r\n            for (var i = varNameIndices.length - 1; i >= 0; i--) {\r\n                rule.declarations.splice(varNameIndices[i], 1);\r\n            }\r\n        }\r\n    });\r\n    Object.keys(settings.variables).forEach(function(key) {\r\n        var prop = \"--\" + key.replace(/^-+/, \"\");\r\n        var value = settings.variables[key];\r\n        if (key !== prop) {\r\n            settings.variables[prop] = value;\r\n            delete settings.variables[key];\r\n        }\r\n        if (settings.persist) {\r\n            persistStore[prop] = value;\r\n        }\r\n    });\r\n    if (Object.keys(varSource).length) {\r\n        var newRule = {\r\n            declarations: [],\r\n            selectors: [ \":root\" ],\r\n            type: \"rule\"\r\n        };\r\n        Object.keys(varSource).forEach(function(key) {\r\n            map[key] = varSource[key];\r\n            newRule.declarations.push({\r\n                type: \"declaration\",\r\n                property: key,\r\n                value: varSource[key]\r\n            });\r\n            if (settings.persist) {\r\n                persistStore[key] = varSource[key];\r\n            }\r\n        });\r\n        if (settings.preserve) {\r\n            cssTree.stylesheet.rules.push(newRule);\r\n        }\r\n    }\r\n    walkCss(cssTree.stylesheet, function(declarations, node) {\r\n        var decl = void 0;\r\n        var resolvedValue = void 0;\r\n        var value = void 0;\r\n        for (var i = 0; i < declarations.length; i++) {\r\n            decl = declarations[i];\r\n            value = decl.value;\r\n            if (decl.type !== \"declaration\") {\r\n                continue;\r\n            }\r\n            if (!value || value.indexOf(VAR_FUNC_IDENTIFIER + \"(\") === -1) {\r\n                continue;\r\n            }\r\n            resolvedValue = resolveValue(value, map, settings);\r\n            if (resolvedValue !== \"undefined\") {\r\n                if (!settings.preserve) {\r\n                    decl.value = resolvedValue;\r\n                } else {\r\n                    declarations.splice(i, 0, {\r\n                        type: decl.type,\r\n                        property: decl.property,\r\n                        value: resolvedValue\r\n                    });\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n    });\r\n    if (settings.fixNestedCalc) {\r\n        fixNestedCalc(cssTree.stylesheet.rules);\r\n    }\r\n    return stringifyCss(cssTree);\r\n}\r\n\r\nfunction filterVars(rules) {\r\n    return rules.filter(function(rule) {\r\n        if (rule.declarations) {\r\n            var declArray = rule.declarations.filter(function(d) {\r\n                var hasVarProp = d.property && d.property.indexOf(VAR_PROP_IDENTIFIER) === 0;\r\n                var hasVarVal = d.value && d.value.indexOf(VAR_FUNC_IDENTIFIER + \"(\") > -1;\r\n                return hasVarProp || hasVarVal;\r\n            });\r\n            if (rule.type !== \"font-face\") {\r\n                rule.declarations = declArray;\r\n            }\r\n            return Boolean(declArray.length);\r\n        } else if (rule.keyframes) {\r\n            return Boolean(rule.keyframes.filter(function(k) {\r\n                return Boolean(k.declarations.filter(function(d) {\r\n                    var hasVarProp = d.property && d.property.indexOf(VAR_PROP_IDENTIFIER) === 0;\r\n                    var hasVarVal = d.value && d.value.indexOf(VAR_FUNC_IDENTIFIER + \"(\") > -1;\r\n                    return hasVarProp || hasVarVal;\r\n                }).length);\r\n            }).length);\r\n        } else if (rule.rules) {\r\n            rule.rules = filterVars(rule.rules).filter(function(r) {\r\n                return r.declarations && r.declarations.length;\r\n            });\r\n            return Boolean(rule.rules.length);\r\n        }\r\n        return true;\r\n    });\r\n}\r\n\r\nfunction fixNestedCalc(rules) {\r\n    var reCalcExp = /(-[a-z]+-)?calc\\(/;\r\n    rules.forEach(function(rule) {\r\n        if (rule.declarations) {\r\n            rule.declarations.forEach(function(decl) {\r\n                var oldValue = decl.value;\r\n                var newValue = \"\";\r\n                while (reCalcExp.test(oldValue)) {\r\n                    var rootCalc = balancedMatch(\"calc(\", \")\", oldValue || \"\");\r\n                    oldValue = oldValue.slice(rootCalc.end);\r\n                    while (reCalcExp.test(rootCalc.body)) {\r\n                        var nestedCalc = balancedMatch(reCalcExp, \")\", rootCalc.body);\r\n                        rootCalc.body = nestedCalc.pre + \"(\" + nestedCalc.body + \")\" + nestedCalc.post;\r\n                    }\r\n                    newValue += rootCalc.pre + \"calc(\" + rootCalc.body;\r\n                    newValue += !reCalcExp.test(oldValue) ? \")\" + rootCalc.post : \"\";\r\n                }\r\n                decl.value = newValue || decl.value;\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nfunction resolveValue(value, map, settings) {\r\n    var RE_VAR = /([\\w-]+)(?:\\s*,\\s*)?(.*)?/;\r\n    var balancedParens = balancedMatch(\"(\", \")\", value);\r\n    var varStartIndex = value.indexOf(\"var(\");\r\n    var varRef = balancedMatch(\"(\", \")\", value.substring(varStartIndex)).body;\r\n    var warningIntro = \"CSS transform warning:\";\r\n    if (!balancedParens) {\r\n        settings.onWarning(warningIntro + ' missing closing \")\" in the value \"' + value + '\"');\r\n    }\r\n    if (varRef === \"\") {\r\n        settings.onWarning(warningIntro + \" var() must contain a non-whitespace string\");\r\n    }\r\n    var varFunc = VAR_FUNC_IDENTIFIER + \"(\" + varRef + \")\";\r\n    var varResult = varRef.replace(RE_VAR, function(_, name, fallback) {\r\n        var replacement = map[name];\r\n        var hasReplacement = replacement !== undefined && replacement !== \"\";\r\n        var hasFallback = fallback !== undefined && fallback !== \"\";\r\n        if (!hasReplacement && !hasFallback) {\r\n            settings.onWarning(warningIntro + ' variable \"' + name + '\" is undefined');\r\n        }\r\n        if (!hasReplacement && hasFallback) {\r\n            return fallback;\r\n        }\r\n        return replacement;\r\n    });\r\n    value = value.split(varFunc).join(varResult);\r\n    if (value.indexOf(VAR_FUNC_IDENTIFIER + \"(\") !== -1) {\r\n        value = resolveValue(value, map, settings);\r\n    }\r\n    return value;\r\n}\r\n\r\nvar name = \"css-vars-ponyfill\";\r\n\r\nvar defaults = {\r\n    include: \"style,link[rel=stylesheet]\",\r\n    exclude: \"\",\r\n    fixNestedCalc: true,\r\n    onlyLegacy: true,\r\n    onlyVars: false,\r\n    preserve: false,\r\n    silent: false,\r\n    updateDOM: true,\r\n    updateURLs: true,\r\n    variables: {},\r\n    watch: false,\r\n    onBeforeSend: function onBeforeSend() {},\r\n    onSuccess: function onSuccess() {},\r\n    onWarning: function onWarning() {},\r\n    onError: function onError() {},\r\n    onComplete: function onComplete() {}\r\n};\r\n\r\nvar hasNativeSupport = window && window.CSS && window.CSS.supports && window.CSS.supports(\"(--a: 0)\");\r\n\r\nvar regex = {\r\n    cssComments: /\\/\\*[\\s\\S]+?\\*\\//g,\r\n    cssKeyframes: /@(?:-\\w*-)?keyframes/,\r\n    cssUrls: /url\\((?!['\"]?(?:data|http|\\/\\/):)['\"]?([^'\")]*)['\"]?\\)/g,\r\n    cssVars: /(?:(?::root\\s*{\\s*[^;]*;*\\s*)|(?:var\\(\\s*))(--[^:)]+)(?:\\s*[:)])/\r\n};\r\n\r\nvar cssVarsObserver = null;\r\n\r\n/**\r\n * Fetches, parses, and transforms CSS custom properties from specified\r\n * <style> and <link> elements into static values, then appends a new <style>\r\n * element with static values to the DOM to provide CSS custom property\r\n * compatibility for legacy browsers. Also provides a single interface for\r\n * live updates of runtime values in both modern and legacy browsers.\r\n *\r\n * @preserve\r\n * @param {object}   [options] Options object\r\n * @param {string}   [options.include=\"style,link[rel=stylesheet]\"] CSS selector\r\n *                   matching <link re=\"stylesheet\"> and <style> nodes to\r\n *                   process\r\n * @param {string}   [options.exclude] CSS selector matching <link\r\n *                   rel=\"stylehseet\"> and <style> nodes to exclude from those\r\n *                   matches by options.include\r\n * @param {boolean}  [options.fixNestedCalc=true] Removes nested 'calc' keywords\r\n *                   for legacy browser compatibility.\r\n * @param {boolean}  [options.onlyLegacy=true] Determines if the ponyfill will\r\n *                   only generate legacy-compatible CSS in browsers that lack\r\n *                   native support (i.e., legacy browsers)\r\n * @param {boolean}  [options.onlyVars=false] Determines if CSS rulesets and\r\n *                   declarations without a custom property value should be\r\n *                   removed from the ponyfill-generated CSS\r\n * @param {boolean}  [options.preserve=false] Determines if the original CSS\r\n *                   custom property declaration will be retained in the\r\n *                   ponyfill-generated CSS.\r\n * @param {boolean}  [options.silent=false] Determines if warning and error\r\n *                   messages will be displayed on the console\r\n * @param {boolean}  [options.updateDOM=true] Determines if the ponyfill will\r\n *                   update the DOM after processing CSS custom properties\r\n * @param {boolean}  [options.updateURLs=true] Determines if the ponyfill will\r\n *                   convert relative url() paths to absolute urls.\r\n * @param {object}   [options.variables] A map of custom property name/value\r\n *                   pairs. Property names can omit or include the leading\r\n *                   double-hyphen (—), and values specified will override\r\n *                   previous values.\r\n * @param {boolean}  [options.watch=false] Determines if a MutationObserver will\r\n *                   be created that will execute the ponyfill when a <link> or\r\n *                   <style> DOM mutation is observed.\r\n * @param {function} [options.onBeforeSend] Callback before XHR is sent. Passes\r\n *                   1) the XHR object, 2) source node reference, and 3) the\r\n *                   source URL as arguments.\r\n * @param {function} [options.onSuccess] Callback after CSS data has been\r\n *                   collected from each node and before CSS custom properties\r\n *                   have been transformed. Allows modifying the CSS data before\r\n *                   it is transformed by returning any string value (or false\r\n *                   to skip). Passes 1) CSS text, 2) source node reference, and\r\n *                   3) the source URL as arguments.\r\n * @param {function} [options.onWarning] Callback after each CSS parsing warning\r\n *                   has occurred. Passes 1) a warning message as an argument.\r\n * @param {function} [options.onError] Callback after a CSS parsing error has\r\n *                   occurred or an XHR request has failed. Passes 1) an error\r\n *                   message, and 2) source node reference, 3) xhr, and 4 url as\r\n *                   arguments.\r\n * @param {function} [options.onComplete] Callback after all CSS has been\r\n *                   processed, legacy-compatible CSS has been generated, and\r\n *                   (optionally) the DOM has been updated. Passes 1) a CSS\r\n *                   string with CSS variable values resolved, and 2) a\r\n *                   reference to the appended <style> node.\r\n *\r\n * @example\r\n *\r\n *   cssVars({\r\n *     include      : 'style,link[rel=\"stylesheet\"]', // default\r\n *     exclude      : '',\r\n *     fixNestedCalc: true,  // default\r\n *     onlyLegacy   : true,  // default\r\n *     onlyVars     : false, // default\r\n *     preserve     : false, // default\r\n *     silent       : false, // default\r\n *     updateDOM    : true,  // default\r\n *     updateURLs   : true,  // default\r\n *     variables    : {\r\n *       // ...\r\n *     },\r\n *     onBeforeSend(xhr, node, url) {\r\n *       // ...\r\n *     }\r\n *     onSuccess(cssText, node, url) {\r\n *       // ...\r\n *     },\r\n *     onWarning(message) {\r\n *       // ...\r\n *     },\r\n *     onError(message, node) {\r\n *       // ...\r\n *     },\r\n *     onComplete(cssText, styleNode) {\r\n *       // ...\r\n *     }\r\n *   });\r\n */ function cssVars() {\r\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n    var settings = mergeDeep(defaults, options);\r\n    function handleError(message, sourceNode, xhr, url) {\r\n        if (!settings.silent) {\r\n            console.error(message + \"\\n\", sourceNode);\r\n        }\r\n        settings.onError(message, sourceNode, xhr, url);\r\n    }\r\n    function handleWarning(message) {\r\n        if (!settings.silent) {\r\n            console.warn(message);\r\n        }\r\n        settings.onWarning(message);\r\n    }\r\n    if (document.readyState !== \"loading\") {\r\n        if (!hasNativeSupport || !settings.onlyLegacy) {\r\n            var styleNodeId = name;\r\n            if (settings.watch) {\r\n                addMutationObserver(settings, styleNodeId);\r\n            }\r\n            getCssData({\r\n                include: settings.include,\r\n                exclude: \"#\" + styleNodeId + (settings.exclude ? \",\" + settings.exclude : \"\"),\r\n                filter: settings.onlyVars ? regex.cssVars : null,\r\n                onBeforeSend: settings.onBeforeSend,\r\n                onSuccess: function onSuccess(cssText, node, url) {\r\n                    var returnVal = settings.onSuccess(cssText, node, url);\r\n                    cssText = returnVal === false ? \"\" : returnVal || cssText;\r\n                    if (settings.updateURLs) {\r\n                        var cssUrls = cssText.replace(regex.cssComments, \"\").match(regex.cssUrls) || [];\r\n                        cssUrls.forEach(function(cssUrl) {\r\n                            var oldUrl = cssUrl.replace(regex.cssUrls, \"$1\");\r\n                            var newUrl = getFullUrl$1(oldUrl, url);\r\n                            cssText = cssText.replace(cssUrl, cssUrl.replace(oldUrl, newUrl));\r\n                        });\r\n                    }\r\n                    return cssText;\r\n                },\r\n                onError: function onError(xhr, node, url) {\r\n                    var responseUrl = xhr.responseURL || getFullUrl$1(url, location.href);\r\n                    var statusText = xhr.statusText ? \"(\" + xhr.statusText + \")\" : \"Unspecified Error\" + (xhr.status === 0 ? \" (possibly CORS related)\" : \"\");\r\n                    var errorMsg = \"CSS XHR Error: \" + responseUrl + \" \" + xhr.status + \" \" + statusText;\r\n                    handleError(errorMsg, node, xhr, responseUrl);\r\n                },\r\n                onComplete: function onComplete(cssText, cssArray, nodeArray) {\r\n                    var cssMarker = /\\/\\*__CSSVARSPONYFILL-(\\d+)__\\*\\//g;\r\n                    var styleNode = null;\r\n                    cssText = cssArray.map(function(css, i) {\r\n                        return regex.cssVars.test(css) ? css : \"/*__CSSVARSPONYFILL-\" + i + \"__*/\";\r\n                    }).join(\"\");\r\n                    try {\r\n                        cssText = transformVars(cssText, {\r\n                            fixNestedCalc: settings.fixNestedCalc,\r\n                            onlyVars: settings.onlyVars,\r\n                            persist: settings.updateDOM,\r\n                            preserve: settings.preserve,\r\n                            variables: settings.variables,\r\n                            onWarning: handleWarning\r\n                        });\r\n                        var hasKeyframes = regex.cssKeyframes.test(cssText);\r\n                        var cssMarkerMatch = cssMarker.exec(cssText);\r\n                        while (cssMarkerMatch !== null) {\r\n                            var matchedText = cssMarkerMatch[0];\r\n                            var cssArrayIndex = cssMarkerMatch[1];\r\n                            cssText = cssText.replace(matchedText, cssArray[cssArrayIndex]);\r\n                            cssMarkerMatch = cssMarker.exec(cssText);\r\n                        }\r\n                        if (settings.updateDOM && nodeArray && nodeArray.length) {\r\n                            var lastNode = nodeArray[nodeArray.length - 1];\r\n                            styleNode = document.querySelector(\"#\" + styleNodeId) || document.createElement(\"style\");\r\n                            styleNode.setAttribute(\"id\", styleNodeId);\r\n                            if (styleNode.textContent !== cssText) {\r\n                                styleNode.textContent = cssText;\r\n                            }\r\n                            if (lastNode.nextSibling !== styleNode) {\r\n                                lastNode.parentNode.insertBefore(styleNode, lastNode.nextSibling);\r\n                            }\r\n                            if (hasKeyframes) {\r\n                                fixKeyframes();\r\n                            }\r\n                        }\r\n                    } catch (err) {\r\n                        var errorThrown = false;\r\n                        cssArray.forEach(function(cssText, i) {\r\n                            try {\r\n                                cssText = transformVars(cssText, settings);\r\n                            } catch (err) {\r\n                                var errorNode = nodeArray[i - 0];\r\n                                errorThrown = true;\r\n                                handleError(err.message, errorNode);\r\n                            }\r\n                        });\r\n                        if (!errorThrown) {\r\n                            handleError(err.message || err);\r\n                        }\r\n                    }\r\n                    settings.onComplete(cssText, styleNode);\r\n                }\r\n            });\r\n        } else if (hasNativeSupport && settings.updateDOM) {\r\n            Object.keys(settings.variables).forEach(function(key) {\r\n                var prop = \"--\" + key.replace(/^-+/, \"\");\r\n                var value = settings.variables[key];\r\n                document.documentElement.style.setProperty(prop, value);\r\n            });\r\n        }\r\n    } else {\r\n        document.addEventListener(\"DOMContentLoaded\", function init(evt) {\r\n            cssVars(options);\r\n            document.removeEventListener(\"DOMContentLoaded\", init);\r\n        });\r\n    }\r\n}\r\n\r\nfunction addMutationObserver(settings, ignoreId) {\r\n    if (window.MutationObserver && !cssVarsObserver) {\r\n        var isLink = function isLink(node) {\r\n            return node.tagName === \"LINK\" && (node.getAttribute(\"rel\") || \"\").indexOf(\"stylesheet\") !== -1;\r\n        };\r\n        var isStyle = function isStyle(node) {\r\n            return node.tagName === \"STYLE\" && (ignoreId ? node.id !== ignoreId : true);\r\n        };\r\n        var debounceTimer = null;\r\n        cssVarsObserver = new MutationObserver(function(mutations) {\r\n            var isUpdateMutation = false;\r\n            mutations.forEach(function(mutation) {\r\n                if (mutation.type === \"attributes\") {\r\n                    isUpdateMutation = isLink(mutation.target) || isStyle(mutation.target);\r\n                } else if (mutation.type === \"childList\") {\r\n                    var addedNodes = Array.apply(null, mutation.addedNodes);\r\n                    var removedNodes = Array.apply(null, mutation.removedNodes);\r\n                    isUpdateMutation = [].concat(addedNodes, removedNodes).some(function(node) {\r\n                        var isValidLink = isLink(node) && !node.disabled;\r\n                        var isValidStyle = isStyle(node) && !node.disabled && regex.cssVars.test(node.textContent);\r\n                        return isValidLink || isValidStyle;\r\n                    });\r\n                }\r\n                if (isUpdateMutation) {\r\n                    clearTimeout(debounceTimer);\r\n                    debounceTimer = setTimeout(function() {\r\n                        cssVars(settings);\r\n                    }, 1);\r\n                }\r\n            });\r\n        });\r\n        cssVarsObserver.observe(document.documentElement, {\r\n            attributes: true,\r\n            attributeFilter: [ \"disabled\", \"href\" ],\r\n            childList: true,\r\n            subtree: true\r\n        });\r\n    }\r\n}\r\n\r\nfunction fixKeyframes() {\r\n    var allNodes = document.body.getElementsByTagName(\"*\");\r\n    var keyframeNodes = [];\r\n    var nameMarker = \"__css-vars-keyframe__\";\r\n    for (var i = 0, len = allNodes.length; i < len; i++) {\r\n        var node = allNodes[i];\r\n        var animationName = window.getComputedStyle(node).animationName;\r\n        if (animationName !== \"none\") {\r\n            node.style.animationName += nameMarker;\r\n            keyframeNodes.push(node);\r\n        }\r\n    }\r\n    void document.body.offsetHeight;\r\n    for (var _i = 0, _len = keyframeNodes.length; _i < _len; _i++) {\r\n        var nodeStyle = keyframeNodes[_i].style;\r\n        nodeStyle.animationName = nodeStyle.animationName.replace(nameMarker, \"\");\r\n    }\r\n}\r\n\r\nfunction getFullUrl$1(url) {\r\n    var base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : location.href;\r\n    var d = document.implementation.createHTMLDocument(\"\");\r\n    var b = d.createElement(\"base\");\r\n    var a = d.createElement(\"a\");\r\n    d.head.appendChild(b);\r\n    d.body.appendChild(a);\r\n    b.href = base;\r\n    a.href = url;\r\n    return a.href;\r\n}\r\n\r\nexport default cssVars;\r\n","import './../css-dev/main.scss';\r\nimport jQuery from 'jquery';\r\nimport cssVars from './cssVars';\r\nimport {browserSupportCssVariables} from './utils';\r\n\r\n'use strict';\r\n\r\n/*if (!browserSupportCssVariables()) {\r\n    cssVars(); // css variables polyfill for IE9+\r\n}*/\r\n\r\n(function ($) {\r\n    $('.crdm-cards article .wp-show-posts-inner').addClass('widget');\r\n\r\n})(jQuery);"],"sourceRoot":""}